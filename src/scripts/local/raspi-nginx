#!/bin/bash

URL=rgdlr.sytes.net

# Install nginx
sudo apt-get install nginx -y

# Create folder for nginx source code
sudo mkdir /var/www/$URL
sudo chmod 755 -R /var/www/$URL
sudo chown -R $(whoami):www-data /var/www/$URL

# Configure server site (later modified by certbot ssl)
echo "server {
	listen 80;

	server_name  www.$URL;

	location / {
        add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";

		root /var/www/$URL;
		index index.html;

		if (!-e $request_filename){
			rewrite ^(.*)$ /index.html break;
		}

		try_files $uri $uri/ =404;
	}

	location /api/v1 {
		proxy_set_header 'Access-Control-Allow-Origin' \'http://$URL\';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        proxy_set_header 'Access-Control-Allow-Headers' 'X-Requested-With,Accept,Content-Type, Origin';

        proxy_pass http://127.0.0.1:44380;
        proxy_redirect off;
        proxy_buffering on;

        proxy_set_header	Host			$host;
        proxy_set_header	X-Real-IP		$remote_addr;
        proxy_set_header	X-Forwarded-For	$proxy_add_x_forwarded_for;
        proxy_set_header	origin			\'http://$URL\';
	}
}" | sudo tee -a /etc/nginx/sites-available/$URL


# Test configuration
sudo nginx -t

# Set configuration as default
sudo unlink /etc/nginx/sites-enabled/default
sudo ln -s /etc/nginx/sites-available/$URL /etc/nginx/sites-enabled

# Restart nginx
sudo systemctl restart nginx
